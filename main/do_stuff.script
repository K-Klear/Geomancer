local string_start = "{\"NORMALSection\":[{\"name\":\"Empty\",\"distance\":\"-12\",\"properties\":[{\"startUnit\":\"-12\"}]}],\"Volume\":["
local string_end = "],\"Decor\":[],\"DecorGroups\":[]}"
local vol_1 = "{\"type\":\"Additive\",\"offset\":\"("
local vol_2 = ")\",\"scale\":\"("
local vol_3 = ")\",\"worldPosition\":\"("
local vol_4 = ")\",\"localScale\":\"("
local vol_5 = ")\",\"groupIndex\":\""
local vol_6 = "\",\"processingOrder\":\"1500\"}"

local walkway = "{\"type\":\"Subtractive\",\"offset\":\"(-1, -1, -4)\",\"scale\":\"(2, 1, 249)\",\"worldPosition\":\"(0.00, -0.25, 60.25)\",\"localScale\":\"(1.00, 0.50, 124.50)\",\"groupIndex\":\"1\",\"processingOrder\":\"1000\"},"

local comma = ", "

local function get_pixel_rgba(pixels, width, x, y)
	local index = y * width * 4 + x * 4 + 1
	local r = pixels[index + 0]
	local g = pixels[index + 1]
	local b = pixels[index + 2]
	local a = pixels[index + 3]
	return r,g,b,a
end

local function is_white(pixels, width, x, y)
	local index = y * width * 4 + x * 4 + 1
	local r = pixels[index + 0]
	return r > 128
end

local function get_volume(pos_x, pos_y, pos_z, scale_x, scale_y, scale_z, group_index)
	local vol = vol_1..tostring(pos_x)..comma..tostring(pos_y)..comma..tostring(pos_z)..vol_2..tostring(scale_x)..comma..tostring(scale_y)..comma..tostring(scale_z)
	vol = vol..vol_3..tostring(((scale_x * 0.5) + pos_x) * 0.5)..comma..tostring(((scale_y * 0.5) + pos_y) * 0.5)..comma..tostring(((scale_z * 0.5) + pos_z) * 0.5)
	vol = vol..vol_4..tostring(scale_x * 0.5)..comma..tostring(scale_y * 0.5)..comma..tostring(scale_z * 0.5)..vol_5..group_index..vol_6
	return vol
end

function init(self)
	local f = io.open("baa.png", "rb")
	local image = f:read("*a")

	local buf, w, h = png.decode_rgba(image, true)
	local pixels = buffer.get_stream(buf, hash("pixels"))

	local pos_x, scale_x, white = -83, 1

	local volumes = {}

	local _file = io.output("do_not_ship.pw_meta")

	for y = 0, 165 do
		pos_x = -83
		scale_x = 0
		for x = 0, 165 do
			if is_white(pixels, w, x, y) then
				scale_x = scale_x + 1
			else
				if scale_x > 0 then 
					table.insert(volumes, get_volume(pos_x, -80 + y, 150, scale_x, 1, 1, 2))
				end
				pos_x = x - 82
				scale_x = 0
			end
		end
		if scale_x > 0 then 
			table.insert(volumes, get_volume(pos_x, -80 + y, 150, scale_x, 1, 5, 2))
		end
	end

	local final_str = ""

	for key, val in ipairs(volumes) do
		final_str = final_str..val
		if key < #volumes then
			final_str = final_str..","
		end
	end

	io.write(string_start..walkway..final_str..string_end)
end