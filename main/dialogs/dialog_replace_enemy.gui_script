local UI = require "modules.ui"
--local MEM = require "modules.memory"

local parent_tab, enemy_to_replace

function init(self)
	gui.set_render_order(2)
	msg.post("#", hash("disable"))
	UI.load_template({"choice_normal", "choice_tough", "choice_chuck", "choice_turret", "choice_minigun", "choice_shield", "choice_horse", "choice_skull", "choice_trap", "choice_cancel"}, "dialog_replace_enemy")
end

local function evaluate_button(button, item)
	if button == "choice_cancel" then
		msg.post("#", hash("disable"))
		msg.post("#", hash("release_input_focus"))
		msg.post(parent_tab, hash("dialog_closed"), {dialog = hash("replace_enemy")})
	else
		local enemy_clicked = string.sub(button, 8)
		if enemy_clicked == enemy_to_replace then
			msg.post("/navbar#navbar", hash("update_status"), {text = "Choose a different enemy type."})
		else
			msg.post(parent_tab, hash("dialog_closed"), {dialog = hash("replace_enemy"), enemy_clicked = enemy_clicked, enemy_to_replace = enemy_to_replace})
			msg.post("#", hash("disable"))
			msg.post("#", hash("release_input_focus"))
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		parent_tab = sender
		msg.post("#", hash("acquire_input_focus"))
		msg.post("#", hash("enable"))
		enemy_to_replace = message.enemy_to_replace
	elseif message_id == hash("hide") then
		msg.post("#", hash("disable"))
		msg.post("#", hash("release_input_focus"))
	end
end


function on_input(self, action_id, action)
	UI.on_input("dialog_replace_enemy", action_id, action, evaluate_button)
end