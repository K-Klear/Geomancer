local UI = require "modules.ui"
local DIALOG = UI.DIALOG

local obstacle_list, evaluate_button
local DIALOG_NAME = "obstacles"
local DIALOG_DATA

local obstacle_names = {
	"Normal", "Pipes", "Rocks", "Colony", "Tower", "Crates", "Train", "EarthCracker", "ShredPipes", "Vaporwave",
	"Castle", "Spooky", "AirDrop", "Logs"
}

function init(self)
	DIALOG.setup(DIALOG_NAME)
	DIALOG_DATA = UI.tab[DIALOG_NAME]
	UI.load_template({"obstacle_guide", "dialog_obstacles_cancel"}, DIALOG_NAME)
	local obstacle_list_tab = {
		{
			type = hash("exclusive_button"),
			node = gui.get_node("obstacle_exclusive/button_white"),
			text_node = gui.get_node("obstacle_exclusive/text"),
			value_fn = function(i) return obstacle_names[i] end,
			template = "obstacle_exclusive;",
			fn = evaluate_button
		},
		item_count = 0,
		scroll_prefix = "obstacles_"
	}
	obstacle_list = UI.create_list(DIALOG_NAME, gui.get_node("obstacles_list"), obstacle_list_tab)
	UI.update_list(DIALOG_NAME, obstacle_list, #obstacle_names)
end

function evaluate_button(button, item)
	if button == "dialog_obstacles_cancel" or button == "escape" then
		DIALOG.close(DIALOG_NAME)
	elseif button == "obstacle_guide" then
		sys.open_url("https://mod.io/g/pistol-whip/r/materials-and-obstacles")
	elseif button == obstacle_list then
		msg.post(DIALOG_DATA.parent_tab, hash("dialog_closed"), {dialog = "obstacles", obstacle = obstacle_names[item]})
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		DIALOG.show(DIALOG_DATA, sender)
		local obstacle_index = 0
		for key, val in ipairs(obstacle_names) do
			if message.current_set == val then
				obstacle_index = key
				break
			end
		end
		UI.select_exclusive_button(DIALOG_NAME, obstacle_list, obstacle_index, true)
	end
end

function update()
	if DIALOG_DATA.dialog_open then
		for list_index in pairs(DIALOG_DATA.scrolling) do
			UI.move_list_root(DIALOG_NAME, list_index, true)
		end
	end
end

function on_input(self, action_id, action)
	UI.on_input(DIALOG_NAME, action_id, action, evaluate_button)
end